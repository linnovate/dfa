{"version":3,"sources":["contexts/BlocktreeProvider.js","config.ts","contexts/GlobalState.js","Credentials.ts","contexts/DamlProvider.js","components/LoginScreen.tsx","components/UserWidget.tsx","components/AllRequests.tsx","components/Maps.tsx","components/CreateRequest.tsx","components/MyApprovedRequests.tsx","components/MyRequests.tsx","components/RequestsForApproval.tsx","components/RequestsGraph.tsx","components/CreateMember.tsx","index.tsx","components/Users.tsx","components/Members.tsx"],"names":["AddComponent","DeploymentMode","GlobalStateContext","createContext","GlobalStateProvider","props","useState","store","globalState","setGlobalState","Provider","value","children","useGlobalState","type","data","useContext","undefined","BlocktreeProvider","components","setComponents","el","component","settings","ReactDOM","createPortal","React","createElement","deploymentMode","window","location","hostname","endsWith","PROD_DABL","PROD_OTHER","ledgerId","split","process","httpBaseUrl","computeCredentials","party","token","payload","encode","computeToken","DamlProvider","credentials","JSON","parse","sessionStorage","getItem","user","setUser","LoginScreen","onLogin","parties","setParty","select","setSelect","login","useCallback","a","ledger","Ledger","fetchByKey","User","create","username","alert","handleLogin","event","preventDefault","useEffect","url","URL","toString","searchParams","get","Error","search","history","replaceState","state","Grid","className","textAlign","style","height","verticalAlign","Column","maxWidth","Header","as","size","color","Content","Form","Segment","Dropdown","fluid","selection","placeholder","options","key","text","onChange","e","currentTarget","textContent","Input","icon","iconPosition","Button","primary","onClick","disabled","assign","UserWidget","logoutLink","requestLink","approvalLink","showLogin","setShowLogin","useLedger","useParty","setItem","stringify","Menu","borderless","position","Item","active","removeItem","href","AllRequests","results","useQuery","FlightRequest","resultsCompleted","CompletedRequest","itemsRequest","contracts","map","item","reverse","itemsCompleted","items","sort","b","Date","flight","time","getTime","Icon","name","Divider","List","relaxed","approvers","length","Label","ribbon","lat","lng","altitude","timeStart","timeEnd","join","disapprovers","CustomMarker","infoVisible","setInfoVisible","visible","onMouseOver","onMouseOut","UncomposedPinsMap","withScriptjs","withGoogleMap","defaultZoom","defaultCenter","PinMap","googleMapURL","loadingElement","containerElement","mapElement","UncomposedChooseMap","center","setCenter","zoom","setZoom","markerPosition","setMarkerPosition","markerVisible","setMarkerVisible","onRightClick","navigator","geolocation","getCurrentPosition","coords","latitude","longitude","latLng","onSubmit","ChooseMap","CreateRequest","update","reload","useReload","allowRequest","includes","setFlight","isSubmitting","setIsSubmitting","showMap","setShowMap","submit","exerciseByKey","basic","labelPosition","width","label","step","min","loading","content","MyApprovedRequests","filter","MyRequests","console","log","RequestsForApproval","contractId","exercise","Approved","approver","Disapproved","disapprover","parseFloat","positive","approveRequest","secondary","disapproveRequest","Chart","register","ArcElement","LineElement","BarElement","PointElement","BarController","BubbleController","DoughnutController","LineController","PieController","PolarAreaController","RadarController","ScatterController","CategoryScale","LinearScale","LogarithmicScale","RadialLinearScale","TimeScale","TimeSeriesScale","Decimation","Filler","Legend","Title","Tooltip","SubTitle","CreateMember","users","setData","GroupMember","org","group","member","widgets","RequestsGraph","canvasRef","useRef","datasets","color1","Math","random","color2","color3","x","y","r","backgroundColor","borderColor","tension","myChart","current","destroy","ref","Users","Members","groups","forEach","push","Object","keys","BlocktreeWidgets","innerHTML","error","ElementreeElement","this","getAttribute","dataset","HTMLElement","customElements","define","render","document","root"],"mappings":"qUAIIA,E,ECDQC,E,yHCANC,EAAqBC,0BAGdC,EAAsB,SAACC,GAEhC,MAAsCC,mBAASD,EAAME,OAAS,IAA9D,mBAAOC,EAAP,KAAoBC,EAApB,KAEA,OAAS,eACLP,EAAmBQ,SADd,CACuBC,MACxB,CAACH,EAAaC,GAFb,cAEmCJ,EAAMO,SAFzC,QAQAC,EAAiB,SAACC,EAAMC,GACjC,MAAsCC,qBAAWd,GAAjD,mBAAOM,EAAP,KAAoBC,EAApB,KAMA,OAJIK,QAAiBG,IAATF,IACRP,EAAYM,GAAQC,GAGjB,CACHD,EAAON,EAAYM,GAAQN,EAC3B,SAACO,GAAD,OAAUN,EAAe,2BAAID,GAAL,kBAAmBM,EAAOC,Q,QFpB7CG,EAAoB,SAACb,GAG9B,MAAoCC,mBAAS,IAA7C,mBAAOa,EAAP,KAAmBC,EAAnB,KAUA,OAPApB,EAAe,SAACqB,EAAIC,GAA8B,IAAnBC,EAAkB,uDAAP,GAEtCD,EAAYE,IAASC,aAAaC,IAAMC,cAAcL,EAAWC,GAAWF,GAE5ED,EAAc,GAAD,mBAAKD,GAAL,CAAiBG,MAG3BH,G,2BCjBClB,O,aAAAA,I,yBAAAA,I,4BAAAA,M,KAML,IAAM2B,EAGPC,OAAOC,SAASC,SAASC,SAAS,aAChC/B,EAAegC,UACfhC,EAAeiC,WAIVC,EACXP,IAAmB3B,EAAegC,UAC9BJ,OAAOC,SAASC,SAASK,MAAM,KAAK,GADxC,UAEIC,eAFJ,EAGK,cAEMC,EACXV,IAAmB3B,EAAegC,UAAlC,2CACwCE,EADxC,UAEIlB,E,SEGC,IAAMsB,EAAqB,SAACC,GACjC,IAAMC,EAZR,SAAsBD,GACpB,IAAME,EAAU,CACd,8BAA+B,CAC7B,SAAYP,EACZ,cAjBgC,MAkBhC,MAAS,CAACK,KAGd,OAAOG,iBAAOD,EAhBkB,SAgBG,SAIrBE,CAAaJ,GAC3B,MAAO,CAAEA,QAAOC,QAAON,aCzBV,SAASU,EAAaxC,GAEjC,IAAMyC,EAAcC,KAAKC,MAAMC,eAAeC,QAAQ,gBAAkB,MAExE,EAAwBrC,EAAe,QAAvC,mBAAOsC,EAAP,KAAaC,EAAb,KAMA,OAJKD,GAAQL,EAAYL,OACrBW,EAAQN,GAGH,eAAC,IAAD,CAAYL,MAAUK,EAAYL,MACvCD,MAAUM,EAAYN,MACtBF,YAAgBA,EAFX,cAE6BjC,EAAMO,SAFnC,O,6GCwGEyC,EAvGsB,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAEhCC,EAAU,CAAC,QAAS,SAAU,gBAAiB,SAErD,EAA0B7B,IAAMpB,SAAS,IAAzC,mBAAOkC,EAAP,KAAcgB,EAAd,KACA,EAA4B9B,IAAMpB,SAAS,IAA3C,mBAAOmD,EAAP,KAAeC,EAAf,KAEMC,EAAQC,sBAAW,uCAAC,WAAOd,GAAP,eAAAe,EAAA,sEAEhBC,EAAS,IAAIC,IAAO,CAAEtB,MAAOK,EAAYL,MAAOH,gBAFhC,SAGZwB,EAAOE,WAAWC,OAAKA,KAAMnB,EAAYN,OAH7B,sBAGwC,OAHxC,qCAIdsB,EAAOI,OAAOD,OAAKA,KAAM,CAAEE,SAAUrB,EAAYN,MAAOe,YAJ1C,OAMtBD,EAAQ,CAAEd,MAAOM,EAAYN,MAAOC,MAAOK,EAAYL,MAAON,SAAUW,EAAYX,WAN9D,kDAQtBiC,MAAM,mBAAD,cARiB,0DAAD,sDAUtB,CAACd,EAASd,EAAOiB,IAEdY,EAAW,uCAAG,WAAOC,GAAP,eAAAT,EAAA,6DAClBS,EAAMC,iBAEAzB,EAAcP,EADS,SAAXkB,EAAqBjB,EAAQiB,GAF7B,SAIZE,EAAMb,GAJM,2CAAH,sDA0BjB,OAfA0B,qBAAU,WACR,IAAMC,EAAM,IAAIC,IAAI7C,OAAOC,SAAS6C,YAC9BlC,EAAQgC,EAAIG,aAAaC,IAAI,SACnC,GAAc,OAAVpC,EAAJ,CAGA,IAAMD,EAAQiC,EAAIG,aAAaC,IAAI,SACnC,GAAc,OAAVrC,EACF,MAAMsC,MAAM,+DAEdL,EAAIM,OAAS,GACblD,OAAOmD,QAAQC,aAAapD,OAAOmD,QAAQE,MAAO,GAAIT,EAAIE,YAC1DhB,EAAM,CAAElB,QAAOD,QAAOL,gBACrB,CAACwB,IAGF,cAACwB,EAAA,EAAD,CAAMC,UAAU,aAAaC,UAAU,SAASC,MAAO,CAAEC,OAAQ,SAAWC,cAAc,SAA1F,SACE,eAACL,EAAA,EAAKM,OAAN,CAAaH,MAAO,CAAEI,SAAU,KAAhC,UACE,cAACC,EAAA,EAAD,CAAQC,GAAG,KAAKP,UAAU,SAASQ,KAAK,OAAOP,MAAO,CAAEQ,MAAO,WAA/D,SACE,cAACH,EAAA,EAAOI,QAAR,4CAIF,cAACC,EAAA,EAAD,CAAMH,KAAK,QAAQT,UAAU,2BAA7B,SACE,cAACa,EAAA,EAAD,UACGrE,IAAmB3B,EAAegC,UAC/B,qCAEA,cAAC+D,EAAA,EAAKE,SAAN,CACEC,OAAK,EACLpB,QAAM,EACNqB,WAAS,EACThB,UAAU,0BACViB,YAAY,eACZC,QAAS,CACT,CAAEC,IAAK,OAAQC,KAAM,OAAQ7F,MAAO,QACpC,CAAE4F,IAAK,QAASC,KAAM,QAAS7F,MAAO,SACtC,CAAE4F,IAAK,SAAUC,KAAM,SAAU7F,MAAO,UACxC,CAAE4F,IAAK,gBAAiBC,KAAM,gBAAiB7F,MAAO,iBACtD,CAAE4F,IAAK,QAASC,KAAM,QAAS7F,MAAO,UACtC8F,SAAU,SAAAC,GAAC,aAAIhD,EAAS,UAACgD,EAAEC,cAAcC,mBAAjB,QAAgC,OAE7C,SAAXnD,GACA,cAACuC,EAAA,EAAKa,MAAN,CACEV,OAAK,EACLW,KAAK,OACLC,aAAa,OACbV,YAAY,WACZjB,UAAU,6BACVqB,SAAU,SAAAC,GAAC,OAAIlD,EAASkD,EAAEC,cAAchG,UAG5C,cAACqG,EAAA,EAAD,CACEC,SAAO,EACPd,OAAK,EACLf,UAAU,2BACV8B,QAAS7C,EACT8C,UAAW1D,GAAqB,SAAXA,IAAsBjB,EAL7C,uBAUA,cAACwE,EAAA,EAAD,CAAQC,SAAO,EAACd,OAAK,EAACe,QAlEZ,WACtBrF,OAAOC,SAASsF,OAAhB,4DAA4EjF,KAiEhE,wCCvCDkF,EA1DqB,SAAC,GAA+C,IAA7CC,EAA4C,EAA5CA,WAEnC,GAF+E,EAAhCC,YAAgC,EAAnBC,aAE1BlH,oBAAS,IAA3C,mBAAOmH,EAAP,KAAkBC,EAAlB,KACA,EAAwB7G,EAAe,QAAvC,mBAAauC,GAAb,WAEMZ,GADSmF,sBACDC,sBAMRtE,EAAO,uCAAG,WAAOR,GAAP,SAAAe,EAAA,sDACZZ,eAAe4E,QAAQ,cAAe9E,KAAK+E,UAAUhF,IACrDM,EAAQN,GACR4E,GAAa,GAHD,2CAAH,sDAeb,OACI,eAACK,EAAA,EAAD,CAAMjB,MAAI,EAACkB,YAAU,EAArB,UACI,eAACD,EAAA,EAAKA,KAAN,CAAWE,SAAS,QAAQ7C,UAAU,wBAAtC,UACK5C,GACG,eAACuF,EAAA,EAAKG,KAAN,CAAWD,SAAS,QAApB,kCAAkDzF,EAAlD,OAEHA,GACG,cAACuF,EAAA,EAAKG,KAAN,CACID,SAAS,QACTE,QAAQ,EACR/C,UAAU,sBACV8B,QAjBH,WACbjE,eAAemF,WAAW,eAC1BhF,EAAQ,MACRvB,OAAOC,SAASuG,KAAOf,GAePR,KAAK,aAGXtE,GACE,cAACuF,EAAA,EAAKG,KAAN,CACID,SAAS,QACTE,QAAQ,EACR/C,UAAU,sBACV8B,QAvCC,WACjBQ,GAAcD,IAuCEX,KAAK,eAIhBW,GACG,cAAC,EAAD,CAAanE,QAASA,Q,mCCTvBgF,EAnDe,WAE1B,IAAMC,EAAUC,mBAASvE,OAAKwE,eACxBC,EAAmBF,mBAASvE,OAAK0E,kBAEjCC,EAAeL,EAAQM,UACxBC,KAAI,SAAAC,GAAI,OAAIA,EAAKrG,WACjBsG,UAECC,EAAiBP,EAAiBG,UACnCC,KAAI,SAAAC,GAAI,OAAIA,EAAKrG,WACjBsG,UAECE,EAAK,sBAAON,GAAP,YAAwBK,IAGnC,OAFAC,EAAMC,MAAK,SAACtF,EAAEuF,GAAH,OAAS,IAAIC,KAAKxF,EAAEyF,OAAOC,MAAMC,UAAY,IAAIH,KAAKD,EAAEE,OAAOC,MAAMC,aAG5E,eAACvD,EAAA,EAAD,CAASb,UAAU,eAAnB,UAEI,eAACO,EAAA,EAAD,CAAQC,GAAG,KAAX,UACI,cAAC6D,EAAA,EAAD,CAAMC,KAAK,UACX,cAAC/D,EAAA,EAAOI,QAAR,8BAGJ,cAAC4D,EAAA,EAAD,IAEA,cAACC,EAAA,EAAD,CAAMC,SAAO,EAACzE,UAAU,QAAxB,SACK8D,GAASA,EAAMJ,KAAI,SAACC,EAAMxC,GAAP,OAChB,eAACN,EAAA,EAAD,WACM8C,EAAKe,UAAUC,SAAWhB,EAAKxF,QAAQwG,OACrC,cAACC,EAAA,EAAD,CAAOlE,MAAM,QAAQmE,QAAM,EAAC7E,UAAU,QAAtC,qBAIA,cAAC4E,EAAA,EAAD,CAAOlE,MAAM,OAAOmE,QAAM,EAAC7E,UAAU,QAArC,qBAIJ,eAACwE,EAAA,EAAK1B,KAAN,oBAAiB,2CAAca,EAAKO,OAAOY,IAA1B,UAAsCnB,EAAKO,OAAOa,IAAlD,eAAmEpB,EAAKO,OAAOc,eAChG,eAACR,EAAA,EAAK1B,KAAN,oBAAiB,mCAASa,EAAKO,OAAOe,UAArB,WAAqCtB,EAAKO,OAAOgB,cAClE,eAACV,EAAA,EAAK1B,KAAN,yBAAsB,iCAASa,EAAKe,UAAUS,KAAK,OAAS,WAC5D,eAACX,EAAA,EAAK1B,KAAN,4BAAyB,iCAASa,EAAKyB,aAAaD,KAAK,OAAS,WAClE,eAACX,EAAA,EAAK1B,KAAN,oBAAiB,iCAASa,EAAK5F,YAdrB4F,EAAK5F,KAAO4F,EAAKO,OAAOe,UAAYtB,EAAKO,OAAOgB,kB,QCrB5EG,EAAe,SAACpK,GAClB,MAAsCC,oBAAS,GAA/C,mBAAOoK,EAAP,KAAoBC,EAApB,KACA,OAAO,cAAC,SAAD,CACH1C,SAAU5H,EAAM4H,SAChB2C,QAASvK,EAAMuK,QACfC,YAAa,WACTF,GAAe,IAEnBG,WAAY,WACRH,GAAe,IAPhB,SASFD,GAAgB,cAAC,aAAD,UAAY,uCAAUrK,EAAM4H,SAASiC,IAAI,uBAA7B,SAA0C7J,EAAM4H,SAASkC,YAIxFY,EAAoBC,uBAAaC,yBAAc,SAAC5K,GAAD,OACjD,cAAC,YAAD,CACI6K,YAAa,EACbC,cAAe,CAAEjB,IAAK7J,EAAM6J,IAAKC,IAAK9J,EAAM8J,KAFhD,SAGI,cAAC,EAAD,CACIlC,SAAU,CAAEiC,IAAK7J,EAAM6J,IAAKC,IAAK9J,EAAM8J,KACvCS,SAAS,UAKRQ,GAAS,SAAC/K,GAAD,OAClB,cAAC0K,EAAD,CACIM,aAAc,gIACdC,eAAgB,qBAAKhG,MAAO,CAAEC,OAAO,UACrCgG,iBAAkB,qBAAKjG,MAAO,CAAEC,OAAO,UACvCiG,WAAY,qBAAKlG,MAAO,CAAEC,OAAO,UACjC2E,IAAK7J,EAAM6J,IACXC,IAAK9J,EAAM8J,OAGbsB,GAAsBT,uBAAaC,yBAAc,SAAC5K,GAEpD,MAA4BC,mBAAS,CAAE4J,IAAK,kBAAmBC,IAAK,qBAApE,mBAAOuB,EAAP,KAAeC,EAAf,KACA,EAAwBrL,mBAAS,GAAjC,mBAAOsL,EAAP,KAAaC,EAAb,KACA,EAA4CvL,mBAAS,CAAE4J,IAAK,kBAAmBC,IAAK,qBAApF,mBAAO2B,EAAP,KAAuBC,EAAvB,KACA,EAA0CzL,oBAAS,GAAnD,mBAAO0L,EAAP,KAAsBC,EAAtB,KAEA,OAAO,cAAC,YAAD,CACHC,aAAc,SAACxF,GACPyF,UAAUC,aACVD,UAAUC,YAAYC,oBAClB,SAAApE,GACI0D,EAAU,CAAEzB,IAAKjC,EAASqE,OAAOC,SAAUpC,IAAKlC,EAASqE,OAAOE,YAChEX,EAAQ,QAKxB3E,QAAS,SAACR,GACFA,EAAE+F,SACFV,EAAkB,CAAE7B,IAAKxD,EAAE+F,OAAOvC,MAAOC,IAAKzD,EAAE+F,OAAOtC,QACvD8B,GAAiB,GACjB5L,EAAMqM,SAAShG,EAAE+F,OAAOvC,MAAOxD,EAAE+F,OAAOtC,SAGhDyB,KAAMA,EACNF,OAAQA,EACRR,YAAa,EACbC,cAAe,CAAEjB,IAAK,EAAGC,IAAK,GArB3B,SAsBH,cAAC,EAAD,CACIlC,SAAU6D,EACVlB,QAASoB,UAKRW,GAAY,SAACtM,GAAD,OACrB,cAACoL,GAAD,CACIJ,aAAc,gIACdC,eAAgB,qBAAKhG,MAAO,CAAEC,OAAO,UACrCgG,iBAAkB,qBAAKjG,MAAO,CAAEC,OAAO,UACvCiG,WAAY,qBAAKlG,MAAO,CAAEC,OAAO,UACjCmH,SAAUrM,EAAMqM,YC+BTE,GAvGwB,SAAC,GAAa,EAAZC,OAAa,IAE9CtJ,EAAU,CAAC,SAAU,gBAAiB,SACtCf,EAAQoF,qBACR9D,EAAS6D,sBACTmF,EAASC,sBACTC,EAAexK,IAAUe,EAAQ0J,SAASzK,GAEhD,EAA4Bd,IAAMpB,SAAiB,IAAnD,mBAAOgJ,EAAP,KAAe4D,EAAf,KACA,EAAwCxL,IAAMpB,UAAS,GAAvD,mBAAO6M,EAAP,KAAqBC,EAArB,KACA,EAA8B1L,IAAMpB,UAAS,GAA7C,mBAAO+M,EAAP,KAAgBC,EAAhB,KAEMC,EAAM,uCAAG,WAAOjJ,GAAP,SAAAT,EAAA,sEAEXS,EAAMC,iBACN6I,GAAgB,GAHL,SAILtJ,EAAO0J,cAAcvJ,OAAKA,KAAK2I,cAAepK,EAAO,CAAEe,UAAS+F,WAJ3D,OAKXwD,IALW,gDAOX1I,MAAM,2BAAD,OAA4BrB,KAAK+E,UAAL,QAPtB,yBASXsF,GAAgB,GATL,4EAAH,sDAaZ,OACE,eAACnH,EAAA,EAAD,CAAUb,UAAU,eAApB,UAEE,eAACO,EAAA,EAAD,CAAQC,GAAG,KAAX,UACI,cAAC6D,EAAA,EAAD,CAAMC,KAAK,UACX,cAAC/D,EAAA,EAAOI,QAAR,gCAGJ,cAAC4D,EAAA,EAAD,IAECqD,GACC,eAAChH,EAAA,EAAD,CAAMZ,UAAU,sBAAhB,UACI,eAAC4B,EAAA,EAAD,CACEyG,OAAK,EACL3H,MAAM,OACNgB,MAAI,EACJ4G,cAAc,OACdxG,QAAS,WAAOoG,GAAYD,IAL9B,UAOE,cAAC5D,EAAA,EAAD,CAAMC,KAAK,QAPb,SAYF,qBAAKtE,UAAU,qBAAqBE,MAAO,CAACqI,MAAM,OAAQpI,OAAQ8H,EAAU,QAAU,OAAtF,SACCA,GAAY,cAAC,GAAD,CAAWX,SAAU,SAACxC,EAAWC,GAAZ,OAA2B+C,EAAU,2BAAK5D,GAAN,IAAcY,IAAKA,EAAIvF,WAAYwF,IAAKA,EAAIxF,mBAElH,cAACqB,EAAA,EAAKa,MAAN,CACEzB,UAAU,yBACVwI,MAAM,kBACNjN,MAAO2I,EAAOY,IACdzD,SAAU,SAAAC,GAAC,OAAGwG,EAAU,2BAAK5D,GAAN,IAAcY,IAAKxD,EAAEC,cAAchG,YAE5D,cAACqF,EAAA,EAAKa,MAAN,CACEzB,UAAU,yBACVwI,MAAM,kBACNjN,MAAO2I,EAAOa,IACd1D,SAAU,SAAAC,GAAC,OAAGwG,EAAU,2BAAK5D,GAAN,IAAca,IAAKzD,EAAEC,cAAchG,YAE5D,cAACqF,EAAA,EAAKa,MAAN,CACEzB,UAAU,yBACVwI,MAAM,WACN9M,KAAK,SACL+M,KAAK,MACLC,IAAI,IACJnN,MAAO2I,EAAOc,SACd3D,SAAU,SAAAC,GAAC,OAAGwG,EAAU,2BAAK5D,GAAN,IAAcc,SAAU1D,EAAEC,cAAchG,YAEjE,cAACgJ,EAAA,EAAD,CAASvE,UAAU,YACnB,cAACY,EAAA,EAAKa,MAAN,CACEzB,UAAU,yBACVwI,MAAM,aACN9M,KAAK,iBACLH,MAAO2I,EAAOe,UACd5D,SAAU,SAAAC,GAAC,OAAGwG,EAAU,2BAAK5D,GAAN,IAAce,UAAW3D,EAAEC,cAAchG,YAElE,cAACqF,EAAA,EAAKa,MAAN,CACEzB,UAAU,yBACVwI,MAAM,WACN9M,KAAK,iBACLH,MAAO2I,EAAOgB,QACd7D,SAAU,SAAAC,GAAC,OAAGwG,EAAU,2BAAK5D,GAAN,IAAcgB,QAAS5D,EAAEC,cAAchG,YAEhE,cAACqG,EAAA,EAAD,CACEC,SAAO,EACP7B,UAAU,6BACV8B,QAASqG,EACTpG,SAAUgG,KAAkB7D,EAAOY,KAAOZ,EAAOa,KAAOb,EAAOc,UAC/D2D,QAASZ,EACTa,QAAQ,gBCxELC,GAnCsB,WAEjC,IAAMzL,EAAQoF,qBAGRsB,EAFUV,mBAASvE,OAAK0E,kBAERE,UACjBqF,QAAO,SAAAnF,GAAI,OACRA,EAAKrG,QAAQS,OAASX,GACrBuG,EAAKrG,QAAQ8H,aAAaT,OAAShB,EAAKrG,QAAQoH,UAAUC,SAAWhB,EAAKrG,QAAQa,QAAQwG,UAE9FjB,KAAI,SAAAC,GAAI,OAAIA,EAAKrG,WACjBsG,UAEL,OACI,eAAC/C,EAAA,EAAD,CAASb,UAAU,eAAnB,UAEI,eAACO,EAAA,EAAD,CAAQC,GAAG,KAAX,UACI,cAAC6D,EAAA,EAAD,CAAMC,KAAK,UACX,cAAC/D,EAAA,EAAOI,QAAR,sCAGJ,cAAC4D,EAAA,EAAD,IAEA,cAACC,EAAA,EAAD,CAAMC,SAAO,EAACzE,UAAU,QAAxB,SACK8D,GAASA,EAAMJ,KAAI,SAACC,EAAMxC,GAAP,OAChB,cAACN,EAAA,EAAD,UACI,cAAC2D,EAAA,EAAK1B,KAAN,UAAW,mCAASa,EAAKO,OAAOe,UAArB,WAAqCtB,EAAKO,OAAOgB,QAAjD,UAAiEvB,EAAKO,OAAOY,IAA7E,UAAyFnB,EAAKO,OAAOa,IAArG,eAAsHpB,EAAKO,OAAOc,eADnIrB,EAAK5F,KAAO4F,EAAKO,OAAOe,UAAYtB,EAAKO,OAAOgB,kBCqBnE6D,GA9Cc,WAEzB,IAAM3L,EAAQoF,qBACRW,EAAUC,mBAASvE,OAAKwE,eAExBS,EAAQX,EAAQM,UACjBqF,QAAO,SAAAnF,GAAI,OACRA,EAAKrG,QAAQS,OAASX,GACrBuG,EAAKrG,QAAQ8H,aAAaT,OAAShB,EAAKrG,QAAQoH,UAAUC,OAAShB,EAAKrG,QAAQa,QAAQwG,UAE5FjB,KAAI,SAAAC,GAAI,OAAIA,EAAKrG,WAASsG,UAI/B,OAFFoF,QAAQC,IAAI9F,GAGN,eAACtC,EAAA,EAAD,CAASb,UAAU,eAAnB,UAEI,eAACO,EAAA,EAAD,CAAQC,GAAG,KAAX,UACI,cAAC6D,EAAA,EAAD,CAAMC,KAAK,UACX,cAAC/D,EAAA,EAAOI,QAAR,6BAKJ,cAAC4D,EAAA,EAAD,IAEA,cAACC,EAAA,EAAD,CAAMC,SAAO,EAACzE,UAAU,QAAxB,SACK8D,GAASA,EAAMJ,KAAI,SAACC,EAAMxC,GAAP,OAChB,eAACN,EAAA,EAAD,WACI,cAAC+D,EAAA,EAAD,CAAOlE,MAAM,OAAOmE,QAAM,EAAC7E,UAAU,QAArC,qBAGA,eAACwE,EAAA,EAAD,WACI,eAACA,EAAA,EAAK1B,KAAN,oBAAiB,2CAAca,EAAKO,OAAOY,IAA1B,UAAsCnB,EAAKO,OAAOa,IAAlD,eAAmEpB,EAAKO,OAAOc,eAChG,eAACR,EAAA,EAAK1B,KAAN,oBAAiB,mCAASa,EAAKO,OAAOe,UAArB,WAAqCtB,EAAKO,OAAOgB,cAClE,eAACV,EAAA,EAAK1B,KAAN,yBAAsB,iCAASa,EAAKe,UAAUS,KAAK,OAAS,WAC5D,eAACX,EAAA,EAAK1B,KAAN,4BAAyB,iCAASa,EAAKyB,aAAaD,KAAK,OAAS,gBAR5DxB,EAAK5F,KAAO4F,EAAKO,OAAOe,UAAYtB,EAAKO,OAAOgB,kBCkDnEgE,GA5EuB,WAElC,IAAM9L,EAAQoF,qBACR9D,EAAS6D,sBACTY,EAAUC,mBAASvE,OAAKwE,eACxBqE,EAASC,sBACf,EAA8BrL,IAAMpB,UAAS,GAA7C,mBAAO+M,EAAP,KAAgBC,EAAhB,KAEMpE,EAAQX,EAAQM,UACjBqF,QAAO,SAAAnF,GAAI,OACPA,EAAKrG,QAAQa,QAAQ0J,SAASzK,MAC7BuG,EAAKrG,QAAQoH,UAAUmD,SAASzK,IAAUuG,EAAKrG,QAAQ8H,aAAayC,SAASzK,OAElFsG,KAAI,SAAAC,GAAI,kCAAUA,EAAKrG,SAAf,IAAwB6L,WAAYxF,EAAKwF,gBAbd,4CAexC,WAA8BA,GAA9B,SAAA1K,EAAA,sEACUC,EAAO0K,SAASvK,OAAKwE,cAAcgG,SAAUF,EAAY,CAAEG,SAAUlM,IAD/E,OAEIsK,IAFJ,4CAfwC,kEAoBxC,WAAiCyB,GAAjC,SAAA1K,EAAA,sEACUC,EAAO0K,SAASvK,OAAKwE,cAAckG,YAAaJ,EAAY,CAAEK,YAAapM,IADrF,OAEIsK,IAFJ,4CApBwC,sBAyBxC,OACI,eAAC7G,EAAA,EAAD,CAASb,UAAU,eAAnB,UAEI,eAACO,EAAA,EAAD,CAAQC,GAAG,KAAX,UACI,cAAC6D,EAAA,EAAD,CAAMC,KAAK,UACX,cAAC/D,EAAA,EAAOI,QAAR,uCAKJ,cAAC4D,EAAA,EAAD,IAEA,cAACC,EAAA,EAAD,CAAMC,SAAO,EAACzE,UAAU,QAAxB,SACK8D,GAASA,EAAMJ,KAAI,SAACC,EAAMxC,GAAP,OAChB,eAACN,EAAA,EAAD,WACI,cAAC+D,EAAA,EAAD,CAAOpE,GAAG,IAAIE,MAAM,OAAOmE,OAAO,OAAlC,oBAIA,qBAAK7E,UAAU,qBAAqBE,MAAO,CAACqI,MAAM,OAAQpI,OAAQ8H,EAAU,QAAU,OAAtF,SACCA,GAAY,cAAC,GAAD,CAAQnD,IAAK2E,WAAW9F,EAAKO,OAAOY,KAAMC,IAAK0E,WAAW9F,EAAKO,OAAOa,SAEnF,eAACP,EAAA,EAAK1B,KAAN,oBAAiB,mCAASa,EAAKO,OAAOe,UAArB,WAAqCtB,EAAKO,OAAOgB,cAClE,eAACV,EAAA,EAAK1B,KAAN,wBAAqB,2CAAca,EAAKO,OAAOY,IAA1B,WAAuCnB,EAAKO,OAAOa,IAAnD,gBAAqEpB,EAAKO,OAAOc,eACtG,eAACR,EAAA,EAAK1B,KAAN,oBAAiB,iCAASa,EAAK5F,UAE9B4F,EAAKxF,QAAQ0J,SAASzK,IACnB,sBAAK4C,UAAU,UAAf,UACI,cAAC4B,EAAA,EAAD,CACI8H,UAAQ,EACR5H,QAAS,kBAvDD,2CAuDO6H,CAAehG,EAAKwF,aAFvC,qBAIA,cAACvH,EAAA,EAAD,CACIgI,WAAS,EACT9H,QAAS,kBA3DD,2CA2DO+H,CAAkBlG,EAAKwF,aAF1C,wBAIA,eAACvH,EAAA,EAAD,CAAQyG,OAAK,EAAC3H,MAAM,OAAOgB,MAAI,EAAC4G,cAAc,OAC1CxG,QAAS,WAAOoG,GAAYD,IADhC,UAGE,cAAC5D,EAAA,EAAD,CAAMC,KAAK,QAHb,cAtBEX,EAAK5F,KAAO4F,EAAKO,OAAOe,UAAYtB,EAAKO,OAAOgB,kB,SCdlF4E,KAAMC,SACJC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,MAGF,ICkCeC,GApFuB,SAAC,GAAa,EAAZ/D,OAAa,IAI7CrK,EAAQoF,qBACR9D,EAAS6D,sBACTmF,EAASC,sBACTC,EAAexK,GALL,CAAC,SAKqByK,SAASzK,GAIzCqO,EAFUrI,mBAASvE,OAAKA,MAER4E,UACfC,KAAI,SAAAC,GAAI,MAAK,CACZxC,IAAKwC,EAAKrG,QAAQyB,SAClBqC,KAAMuC,EAAKrG,QAAQyB,SACnBxD,MAAOoI,EAAKrG,QAAQyB,aAG5B,EAAwBzC,IAAMpB,SAAS,IAAvC,mBAAOS,EAAP,KAAa+P,EAAb,KACA,EAAwCpP,IAAMpB,UAAS,GAAvD,mBAAO6M,EAAP,KAAqBC,EAArB,KAEMG,EAAM,uCAAG,WAAOjJ,GAAP,SAAAT,EAAA,sEAEXS,EAAMC,iBACN6I,GAAgB,GAHL,SAILtJ,EAAOI,OAAOD,OAAK8M,YAAa,CAAEC,IAAKxO,EAAOyO,MAAOlQ,EAAKkQ,MAAOC,OAAQnQ,EAAKmQ,SAJzE,OAKXpE,IALW,gDAOX1I,MAAM,2BAAD,OAA4BrB,KAAK+E,UAAL,QAPtB,yBASXsF,GAAgB,GATL,4EAAH,sDAaZ,OACE,eAACnH,EAAA,EAAD,CAAUb,UAAU,eAApB,UAEE,eAACO,EAAA,EAAD,CAAQC,GAAG,KAAX,UACI,cAAC6D,EAAA,EAAD,CAAMC,KAAK,UACX,cAAC/D,EAAA,EAAOI,QAAR,gCAGJ,cAAC4D,EAAA,EAAD,IAECqD,GACC,eAAChH,EAAA,EAAD,CAAMZ,UAAU,sBAAhB,UACE,cAACY,EAAA,EAAKE,SAAN,CACEC,OAAK,EACLpB,QAAM,EACNqB,WAAS,EACThB,UAAU,0BACViB,YAAY,eACZC,QAAS,CACT,CAAEC,IAAK,OAAQC,KAAM,OAAQ7F,MAAO,QACpC,CAAE4F,IAAK,SAAUC,KAAM,SAAU7F,MAAO,UACxC,CAAE4F,IAAK,gBAAiBC,KAAM,gBAAiB7F,MAAO,iBACtD,CAAE4F,IAAK,QAASC,KAAM,QAAS7F,MAAO,UACtC8F,SAAU,SAAAC,GAAC,OAAIoK,EAAQ,2BAAK/P,GAAN,IAAakQ,MAAOvK,EAAEC,cAAcC,kBAG5D,cAACZ,EAAA,EAAKE,SAAN,CACEC,OAAK,EACLpB,QAAM,EACNqB,WAAS,EACThB,UAAU,0BACViB,YAAY,eACZC,QAASuK,EACTpK,SAAU,SAAAC,GAAC,OAAIoK,EAAQ,2BAAK/P,GAAN,IAAamQ,OAAQxK,EAAEC,cAAcC,kBAG7D,cAACI,EAAA,EAAD,CACEC,SAAO,EACP7B,UAAU,6BACV8B,QAASqG,EACTQ,QAASZ,EACTa,QAAQ,gBCxDdmD,GAAU,CACd9J,aAEAuF,iBACAtE,cAEA8I,cFyB8B,WAE9B,IAAM5O,EAAQoF,qBACRyJ,EAAYC,mBAKZC,EAHU/I,mBAASvE,OAAKwE,eAGLI,UAAUC,KAAI,SAAAC,GACrC,IAAMyI,EAAyB,IAAhBC,KAAKC,SAAiB,GAC/BC,EAAyB,IAAhBF,KAAKC,SAAiB,GAC/BE,EAAyB,IAAhBH,KAAKC,SAAiB,GACrC,MAAO,CACL3Q,KAAM,CAAC,CACL8Q,EAAG9I,EAAKrG,QAAQ4G,OAAOe,UACvByH,EAAG/I,EAAKrG,QAAQ4G,OAAOc,SACvB2H,EAAG,GACHC,gBAAgB,QAAD,OAAUR,EAAV,aAAqBG,EAArB,aAAgCC,EAAhC,SACd,CACDC,EAAG9I,EAAKrG,QAAQ4G,OAAOgB,QACvBwH,EAAG/I,EAAKrG,QAAQ4G,OAAOc,SACvB2H,EAAG,GACHC,gBAAgB,QAAD,OAAUR,EAAV,aAAqBG,EAArB,aAAgCC,EAAhC,UAEjBhE,MAAO7E,EAAKrG,QAAQS,KACpB8O,YAAY,QAAD,OAAUT,EAAV,aAAqBG,EAArB,aAAgCC,EAAhC,QACXI,gBAAgB,QAAD,OAAUR,EAAV,aAAqBG,EAArB,aAAgCC,EAAhC,UACfM,QAAS,OAuBb,OAnBA1N,qBAAU,WACR,IAAI2N,EAUJ,OATId,EAAUe,UACZD,EAAU,IAAIjD,KAAMmC,EAAUe,QAAS,CACrCtR,KAAM,OACNC,KAAM,CACJwQ,eAKC,WACLY,GAAWA,EAAQE,aAErB,CAACd,IAMC,eAACtL,EAAA,EAAD,CAASb,UAAU,eAAnB,UAEI,eAACO,EAAA,EAAD,CAAQC,GAAG,KAAX,UACI,cAAC6D,EAAA,EAAD,CAAMC,KAAK,UACX,cAAC/D,EAAA,EAAOI,QAAR,gCAGJ,cAAC4D,EAAA,EAAD,IAEEnH,GAAS,wBAAQ8P,IAAKjB,QEnFhClD,cACAF,sBAEAK,uBAEAiE,MCpCsB,WAEpB,IAEMrJ,EAFUV,mBAASvE,OAAKA,MAER4E,UACjBC,KAAI,SAAAC,GAAI,OAAIA,EAAKrG,WAEtB,OACI,eAACuD,EAAA,EAAD,CAAUb,UAAU,eAApB,UAEI,eAACO,EAAA,EAAD,CAAQC,GAAG,KAAX,UACI,cAAC6D,EAAA,EAAD,CAAMC,KAAK,UACX,cAAC/D,EAAA,EAAOI,QAAR,uBAKJ,cAAC4D,EAAA,EAAD,IAEA,cAACC,EAAA,EAAD,CAAMC,SAAO,EAACzE,UAAU,QAAxB,SACK8D,GAASA,EAAMJ,KAAI,SAACC,EAAMxC,GAAP,OAChB,cAACN,EAAA,EAAD,UACI,eAAC2D,EAAA,EAAK1B,KAAN,oBAAiB,iCAASa,EAAK5E,eADrB4E,EAAK5E,mBDiBrCyM,gBAEA4B,QExCwB,WAEtB,IAAMjK,EAAUC,mBAASvE,OAAK8M,aAExB0B,EAAS,GAOf,OANAlK,EAAQM,UAAU6J,SAAQ,SAAA3J,GACtB0J,EAAO1J,EAAKrG,QAAQuO,SAAWwB,EAAO1J,EAAKrG,QAAQuO,OAAS,IAC5DwB,EAAO1J,EAAKrG,QAAQuO,OAAO0B,KAAK5J,EAAKrG,QAAQwO,WAK7C,eAACjL,EAAA,EAAD,CAAUb,UAAU,eAApB,UAEI,eAACO,EAAA,EAAD,CAAQC,GAAG,KAAX,UACI,cAAC6D,EAAA,EAAD,CAAMC,KAAK,UACX,cAAC/D,EAAA,EAAOI,QAAR,yBAKJ,cAAC4D,EAAA,EAAD,IAEA,cAACC,EAAA,EAAD,CAAMC,SAAO,EAACzE,UAAU,QAAxB,SACKwN,OAAOC,KAAKJ,GAAQ3J,KAAI,SAACmI,GAAD,OACrB,eAAChL,EAAA,EAAD,WACI,eAAC2D,EAAA,EAAK1B,KAAN,qBAAkB,iCAAS+I,OAC3B,eAACrH,EAAA,EAAK1B,KAAN,uBAAoB,iCAASuK,EAAOxB,GAAO1G,KAAK,aAFtC0G,aFoBlCpP,OAAOiR,iBAAmB,SAAUpJ,EAAMrI,EAAIE,GAC5C,IACM4P,GAAQzH,GACV1J,EAAaqB,EAAI8P,GAAQzH,GAAOnI,GAEhCF,EAAG0R,UAAH,wBAAgCrJ,EAAhC,uCAEF,MAAOsJ,GACP3R,EAAG0R,UAAH,4CAAoDC,K,IAIlDC,G,uKACJ,WACE,IAAMvJ,EAAOwJ,KAAKC,aAAa,QAC/B,IACMhC,GAAQzH,GACV1J,EAAakT,KAAM/B,GAAQzH,GAAOwJ,KAAKE,SAEvCF,KAAKH,UAAL,wBAAkCrJ,EAAlC,uCAEF,MAAOsJ,GACPE,KAAKH,UAAL,4CAAsDC,Q,eAV5BK,cAchCC,eAAeC,OAAO,oBAAqBN,IAK3CzR,IAASgS,OACP,cAAC,EAAD,UACE,cAAC3Q,EAAD,UACE,cAAC,EAAD,QAGJ4Q,SAAS9R,cAAc,QAKzB+R,OAASA,KAAKX,UAAL,soB","file":"static/js/main.a8572dc1.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport ReactDOM from 'react-dom';\n\n// AddComponent instance;\nlet AddComponent: function;\n\n// Create a provider for components to consume and subscribe to changes\nexport const BlocktreeProvider = (props) => {\n\n    // components hook\n    const [components, setComponents] = useState([]);\n\n    // allow inset widgets outside of react component;\n    AddComponent = (el, component, settings = {}) => {\n        // create a portal component\n        component = ReactDOM.createPortal(React.createElement(component, settings), el);\n        // add to the hook state\n        setComponents([...components, component]);\n    }\n\n    return components;\n\n};\n\n// Get AddComponent function\nexport default AddComponent;\nexport { AddComponent as AddComponent };","// Copyright (c) 2021 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nexport enum DeploymentMode {\n  DEV,\n  PROD_DABL,\n  PROD_OTHER,\n}\n\nexport const deploymentMode: DeploymentMode =\n  process.env.NODE_ENV === 'development'\n    ? DeploymentMode.DEV\n    : window.location.hostname.endsWith('.daml.app')\n      ? DeploymentMode.PROD_DABL\n      : DeploymentMode.PROD_OTHER;\n\n// Decide the ledger ID based on the deployment mode first,\n// then an environment variable, falling back on the sandbox ledger ID.\nexport const ledgerId: string =\n  deploymentMode === DeploymentMode.PROD_DABL\n    ? window.location.hostname.split('.')[0]\n    : process.env.REACT_APP_LEDGER_ID\n    ?? 'dfa-sandbox';\n\nexport const httpBaseUrl =\n  deploymentMode === DeploymentMode.PROD_DABL\n    ? `https://api.projectdabl.com/data/${ledgerId}/`\n    : undefined;\n","import React, { useState, createContext, useContext } from \"react\";\n\n// Create Context Object\nconst GlobalStateContext = createContext();\n\n// Create a provider for components to consume and subscribe to changes\nexport const GlobalStateProvider = (props) => {\n\n    const [globalState, setGlobalState] = useState(props.store || {});\n\n    return ( <\n        GlobalStateContext.Provider value = {\n            [globalState, setGlobalState] } > { props.children } <\n        /GlobalStateContext.Provider>\n    );\n};\n\n// Get State Data\nexport const useGlobalState = (type, data) => {\n    const [globalState, setGlobalState] = useContext(GlobalStateContext);\n\n    if (type && data !== undefined) {\n        globalState[type] = data;\n    }\n\n    return [\n        type ? globalState[type] : globalState,\n        (data) => setGlobalState({...globalState, [type]: data })\n    ];\n}\n\n// Get useGlobalState as default\nexport default useGlobalState;","// Copyright (c) 2021 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport { encode } from 'jwt-simple';\nimport { ledgerId } from './config';\n\nexport const APPLICATION_ID: string = 'dfa';\n\n// NOTE: This is for testing purposes only.\n// To handle authentication properly,\n// see https://docs.daml.com/app-dev/authentication.html.\nexport const SECRET_KEY: string = 'secret';\n\nexport type Credentials = {\n  party: string;\n  token: string;\n  ledgerId: string;\n}\n\nfunction computeToken(party: string): string {\n  const payload = {\n    \"https://daml.com/ledger-api\": {\n      \"ledgerId\": ledgerId,\n      \"applicationId\": APPLICATION_ID,\n      \"actAs\": [party]\n    }\n  };\n  return encode(payload, SECRET_KEY, 'HS256');\n}\n\nexport const computeCredentials = (party: string): Credentials => {\n  const token = computeToken(party);\n  return { party, token, ledgerId };\n}\n\nexport default Credentials;\n","import React, { useState } from 'react';\nimport DamlLedger from '@daml/react';\nimport { useGlobalState } from \"./GlobalState\";\nimport { httpBaseUrl } from '../config';\nimport Credentials from '../Credentials';\n\n// Create a provider\nexport default function DamlProvider(props) {\n\n    const credentials = JSON.parse(sessionStorage.getItem('Credentials') || '{}');\n\n    const [user, setUser] = useGlobalState('user');\n\n    if (!user && credentials.token) {\n        setUser(credentials);\n    }\n\n    return ( <DamlLedger token = { credentials.token }\n        party = { credentials.party }\n        httpBaseUrl = { httpBaseUrl } > { props.children } </DamlLedger>\n    );\n\n};","// Copyright (c) 2021 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport React, { useCallback } from 'react'\nimport { Button, Form, Grid, Header, Segment } from 'semantic-ui-react'\nimport Credentials, { computeCredentials } from '../Credentials';\nimport Ledger from '@daml/ledger';\nimport { User } from '@daml.js/dfa';\nimport { DeploymentMode, deploymentMode, ledgerId, httpBaseUrl } from '../config';\nimport { useEffect } from 'react';\n\ntype Props = {\n  onLogin: (credentials: Credentials) => void;\n}\n\n/**\n * React component for the login screen of the `App`.\n */\nconst LoginScreen: React.FC<Props> = ({ onLogin }) => {\n\n  const parties = [\"Admin\", \"Zoolog\", \"Meteorologist\", \"Hamal\"];\n  \n  const [party, setParty] = React.useState('');\n  const [select, setSelect] = React.useState('');\n  \n  const login = useCallback(async (credentials: Credentials) => {\n    try {\n      const ledger = new Ledger({ token: credentials.token, httpBaseUrl });\n      if (await ledger.fetchByKey(User.User, credentials.party) === null) {\n        await ledger.create(User.User, { username: credentials.party, parties });\n      }\n      onLogin({ party: credentials.party, token: credentials.token, ledgerId: credentials.ledgerId });\n    } catch (error) {\n      alert(`Unknown error:\\n${error}`);\n    }\n  }, [onLogin, party, select]);\n\n  const handleLogin = async (event: React.FormEvent) => {\n    event.preventDefault();\n    const username = (select === \"User\") ? party : select;\n    const credentials = computeCredentials(username);\n    await login(credentials);\n  }\n\n  const handleDablLogin = () => {\n    window.location.assign(`https://login.projectdabl.com/auth/login?ledgerId=${ledgerId}`);\n  }\n\n  useEffect(() => {\n    const url = new URL(window.location.toString());\n    const token = url.searchParams.get('token');\n    if (token === null) {\n      return;\n    }\n    const party = url.searchParams.get('party');\n    if (party === null) {\n      throw Error(\"When 'token' is passed via URL, 'party' must be passed too.\");\n    }\n    url.search = '';\n    window.history.replaceState(window.history.state, '', url.toString());\n    login({ token, party, ledgerId });\n  }, [login]);\n\n  return (\n    <Grid className=\"login-from\" textAlign='center' style={{ height: '100vh' }} verticalAlign='middle'>\n      <Grid.Column style={{ maxWidth: 450 }}>\n        <Header as='h1' textAlign='center' size='huge' style={{ color: '#223668' }}>\n          <Header.Content>\n            Distrubuted Flight Approval\n          </Header.Content>\n        </Header>\n        <Form size='large' className='test-select-login-screen'>\n          <Segment>\n            {deploymentMode !== DeploymentMode.PROD_DABL\n              ? <>\n                {/* FORM_BEGIN */}\n                <Form.Dropdown\n                  fluid\n                  search\n                  selection\n                  className='select-request-receiver'\n                  placeholder=\"Select party\"\n                  options={[\n                  { key: \"User\", text: \"User\", value: \"User\" },\n                  { key: \"Admin\", text: \"Admin\", value: \"Admin\" },\n                  { key: \"Zoolog\", text: \"Zoolog\", value: \"Zoolog\" },\n                  { key: \"Meteorologist\", text: \"Meteorologist\", value: \"Meteorologist\" },\n                  { key: \"Hamal\", text: \"Hamal\", value: \"Hamal\" },]}\n                  onChange={e => setSelect(e.currentTarget.textContent ?? '')}\n                />\n                { select === \"User\" &&\n                  <Form.Input\n                    fluid\n                    icon='user'\n                    iconPosition='left'\n                    placeholder='Username'\n                    className='test-select-username-field'\n                    onChange={e => setParty(e.currentTarget.value)}\n                  />\n                }\n                <Button\n                  primary\n                  fluid\n                  className='test-select-login-button'\n                  onClick={handleLogin}\n                  disabled={!select || select === \"User\" && !party}>\n                  Log in\n                </Button>\n                {/* FORM_END */}\n              </>\n              : <Button primary fluid onClick={handleDablLogin}>\n                Log in with DABL\n              </Button>\n            }\n          </Segment>\n        </Form>\n      </Grid.Column>\n    </Grid>\n  );\n};\n\nexport default LoginScreen;","import React, { useState } from 'react';\nimport { Menu } from 'semantic-ui-react'\nimport { User } from '@daml.js/dfa';\nimport { useParty, useLedger } from '@daml/react';\nimport { useGlobalState } from \"../contexts/GlobalState\";\n\nimport LoginScreen from './LoginScreen';\n\ntype Props = {\n    requestLink: string,\n    approvalLink: string\n}\n\nconst UserWidget: React.FC<Props> = ({ logoutLink, requestLink, approvalLink }) => {\n\n    const [showLogin, setShowLogin] = useState(false);\n    const [user, setUser] = useGlobalState('user');\n    const ledger = useLedger();\n    const party = useParty();\n\n    const clickToLogin = () => {\n        setShowLogin(!showLogin);\n    }\n\n    const onLogin = async (credentials: object) => {\n        sessionStorage.setItem('Credentials', JSON.stringify(credentials));\n        setUser(credentials);\n        setShowLogin(false);\n        // const memebers = await ledger.query(User.GroupMember);\n        // const memeber = memebers.find(item => item.key = credentials.party);\n        // window.location.href = (memeber === 'User' ? requestLink : approvalLink);\n    }\n\n    const onLogout = () => {\n        sessionStorage.removeItem('Credentials');\n        setUser(null);\n        window.location.href = logoutLink;\n    }\n    \n    return (\n        <Menu icon borderless>\n            <Menu.Menu position='right' className='test-select-main-menu'>\n                {party &&\n                    <Menu.Item position='right'>You are logged in as {party}.</Menu.Item>\n                }\n                {party &&\n                    <Menu.Item\n                        position='right'\n                        active={false}\n                        className='test-select-log-out'\n                        onClick={onLogout}\n                        icon='log out'\n                    />\n                }\n                {!party &&\n                    <Menu.Item\n                        position='right'\n                        active={false}\n                        className='test-select-sign-in'\n                        onClick={clickToLogin}\n                        icon='sign in'\n                    />\n                }\n            </Menu.Menu>\n            {showLogin &&\n                <LoginScreen onLogin={onLogin} />\n            }\n        </Menu>\n    );\n};\n\nexport default UserWidget;\n","import React from 'react';\nimport { List, Header, Icon, Segment, Divider, Label } from 'semantic-ui-react';\nimport { User } from '@daml.js/dfa';\nimport { useQuery } from '@daml/react';\n\nconst AllRequests: React.FC = () => {\n\n    const results = useQuery(User.FlightRequest);\n    const resultsCompleted = useQuery(User.CompletedRequest);\n\n    const itemsRequest = results.contracts\n        .map(item => item.payload)\n        .reverse();\n\n    const itemsCompleted = resultsCompleted.contracts\n        .map(item => item.payload)\n        .reverse();\n\n    const items = [...itemsRequest, ...itemsCompleted];\n    items.sort((a,b) => new Date(a.flight.time).getTime() - new Date(b.flight.time).getTime())\n\n    return (\n        <Segment className=\"daml-section\">\n\n            <Header as='h2'>\n                <Icon name='globe' />\n                <Header.Content>All Requests</Header.Content>\n            </Header>\n\n            <Divider />\n\n            <List relaxed className=\"items\">\n                {items && items.map((item, key) => (\n                    <Segment key={item.user + item.flight.timeStart + item.flight.timeEnd}>\n                        {(item.approvers.length === item.parties.length) ?\n                            <Label color='green' ribbon className=\"label\">\n                              Approve\n                            </Label>\n                        :\n                            <Label color='blue' ribbon className=\"label\">\n                              Request\n                            </Label>    \n                        }\n                        <List.Item>Info: <strong>lat: {item.flight.lat}, lng: {item.flight.lng}, altitude: {item.flight.altitude}</strong></List.Item>\n                        <List.Item>Time: <strong>{item.flight.timeStart} --> {item.flight.timeEnd}</strong></List.Item>\n                        <List.Item>Approvers: <strong>{item.approvers.join(', ') || '---'}</strong></List.Item>\n                        <List.Item>Disapprovers: <strong>{item.disapprovers.join(', ') || '---'}</strong></List.Item>\n                        <List.Item>User: <strong>{item.user}</strong></List.Item>\n                    </Segment>\n                ))}\n            </List>\n\n        </Segment>\n    );\n}\n\nexport default AllRequests;","import React, { useState } from \"react\"\nimport { GoogleMap, InfoWindow, Marker, withGoogleMap, withScriptjs } from \"react-google-maps\"\n\ntype PinProps = {\n    lat: number;\n    lng: number;\n}\n\ntype ChooseProps = {\n    onSubmit: Function\n}\n\nconst CustomMarker = (props: any) => {\n    const [infoVisible, setInfoVisible] = useState(false);\n    return <Marker\n        position={props.position}\n        visible={props.visible}\n        onMouseOver={() => {\n            setInfoVisible(true);\n        }}\n        onMouseOut={() => {\n            setInfoVisible(false);\n        }}>\n        {infoVisible && (<InfoWindow><h4>Lat: {props.position.lat}<br /> Lng: {props.position.lng}</h4></InfoWindow>)}\n    </Marker>\n}\n\nconst UncomposedPinsMap = withScriptjs(withGoogleMap((props: any) => (\n    <GoogleMap\n        defaultZoom={8}\n        defaultCenter={{ lat: props.lat, lng: props.lng }}>\n        <CustomMarker\n            position={{ lat: props.lat, lng: props.lng }}\n            visible={true}>\n        </CustomMarker>\n    </GoogleMap>\n)));\n\nexport const PinMap = (props: PinProps) => (\n    <UncomposedPinsMap\n        googleMapURL={\"https://maps.googleapis.com/maps/api/js?v=3.exp&key=AIzaSyCGNWEx_cSfFlxaon2GjBqynYxrAD7kJbY&libraries=geometry,drawing,places\"}\n        loadingElement={<div style={{ height: `100%` }} />}\n        containerElement={<div style={{ height: `100%` }} />}\n        mapElement={<div style={{ height: `100%` }} />}\n        lat={props.lat}\n        lng={props.lng}></UncomposedPinsMap>\n)\n\nconst UncomposedChooseMap = withScriptjs(withGoogleMap((props: any) => {\n\n    const [center, setCenter] = useState({ lat: 33.36157687471931, lng: 35.648549973336756 });\n    const [zoom, setZoom] = useState(9)\n    const [markerPosition, setMarkerPosition] = useState({ lat: 33.36157687471931, lng: 35.648549973336756 })\n    const [markerVisible, setMarkerVisible] = useState(false)\n\n    return <GoogleMap\n        onRightClick={(e) => {\n            if (navigator.geolocation) {\n                navigator.geolocation.getCurrentPosition(\n                    position => {\n                        setCenter({ lat: position.coords.latitude, lng: position.coords.longitude })\n                        setZoom(13)\n                    }\n                )\n            }\n        }}\n        onClick={(e) => {\n            if (e.latLng) {\n                setMarkerPosition({ lat: e.latLng.lat(), lng: e.latLng.lng() })\n                setMarkerVisible(true)\n                props.onSubmit(e.latLng.lat(), e.latLng.lng())\n            }\n        }}\n        zoom={zoom}\n        center={center}\n        defaultZoom={8}\n        defaultCenter={{ lat: 0, lng: 0 }}>\n        <CustomMarker\n            position={markerPosition}\n            visible={markerVisible}>\n        </CustomMarker>\n    </GoogleMap>\n}));\n\nexport const ChooseMap = (props: ChooseProps) => (\n    <UncomposedChooseMap\n        googleMapURL={\"https://maps.googleapis.com/maps/api/js?v=3.exp&key=AIzaSyCGNWEx_cSfFlxaon2GjBqynYxrAD7kJbY&libraries=geometry,drawing,places\"}\n        loadingElement={<div style={{ height: `100%` }} />}\n        containerElement={<div style={{ height: `100%` }} />}\n        mapElement={<div style={{ height: `100%` }} />}\n        onSubmit={props.onSubmit}></UncomposedChooseMap>\n)","import React from 'react'\nimport { Form, Button, Header, Icon, Segment, Divider } from 'semantic-ui-react';\nimport { useParty, useLedger, useReload} from '@daml/react';\nimport { User } from '@daml.js/dfa';\nimport { ChooseMap } from './Maps';\n\ntype Props = {\n  update: Function;\n}\n\ntype Flight = {\n  lat: string;\n  lng: string;\n  timeStart: string;\n  timeEnd: string;\n  altitude: string;\n}\n\nconst CreateRequest: React.FC<Props> = ({update}) => {\n  \n  const parties = [\"Zoolog\", \"Meteorologist\", \"Hamal\"];\n  const party = useParty();\n  const ledger = useLedger();\n  const reload = useReload();\n  const allowRequest = party && !parties.includes(party);\n\n  const [flight, setFlight] = React.useState<Flight>({});\n  const [isSubmitting, setIsSubmitting] = React.useState(false);\n  const [showMap, setShowMap] = React.useState(true);\n  \n  const submit = async (event: React.FormEvent) => {\n    try {\n      event.preventDefault();\n      setIsSubmitting(true);\n      await ledger.exerciseByKey(User.User.CreateRequest, party, { parties, flight });\n      reload();\n    } catch (error) {\n      alert(`Error sending message:\\n${JSON.stringify(error)}`);\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n  \n  return (\n    <Segment  className=\"daml-section\">\n\n      <Header as='h2'>\n          <Icon name='globe' />\n          <Header.Content>Create Request</Header.Content>\n      </Header>\n\n      <Divider />\n\n      {allowRequest && \n        <Form className=\"create-request-form\">\n            <Button\n              basic\n              color='blue'\n              icon\n              labelPosition='left'\n              onClick={() => {setShowMap(!showMap)}}\n            >\n              <Icon name='map' />\n              map\n            </Button>\n\n          {\n          <div className=\"create-request-map\" style={{width:\"100%\", height: showMap ? \"400px\" : \"0px\"}}>\n          {showMap && (<ChooseMap onSubmit={(lat:number,lng:number) => setFlight({ ...flight, lat: lat.toString(), lng: lng.toString() })}/>)}\n          </div>}\n          <Form.Input\n            className='select-request-content'\n            label=\"lat coordinates\"\n            value={flight.lat}\n            onChange={e=> setFlight({ ...flight, lat: e.currentTarget.value})}\n          />\n          <Form.Input\n            className='select-request-content'\n            label=\"lng coordinates\"\n            value={flight.lng}\n            onChange={e=> setFlight({ ...flight, lng: e.currentTarget.value})}\n          />\n          <Form.Input\n            className='select-request-content'\n            label=\"Altitude\"\n            type=\"number\"\n            step='100'\n            min='0'\n            value={flight.altitude}\n            onChange={e=> setFlight({ ...flight, altitude: e.currentTarget.value})}\n          />\n          <Divider className=\"Divider\" />\n          <Form.Input\n            className='select-request-content'\n            label=\"Start time\"\n            type=\"datetime-local\"\n            value={flight.timeStart}\n            onChange={e=> setFlight({ ...flight, timeStart: e.currentTarget.value})}\n          />\n          <Form.Input\n            className='select-request-content'\n            label=\"End time\"\n            type=\"datetime-local\"\n            value={flight.timeEnd}\n            onChange={e=> setFlight({ ...flight, timeEnd: e.currentTarget.value})}\n          />\n          <Button\n            primary\n            className='select-request-send-button'\n            onClick={submit}\n            disabled={isSubmitting || !(flight.lat && flight.lng && flight.altitude)}\n            loading={isSubmitting}\n            content=\"Send\"\n          />\n        </Form>\n      }\n\n    </Segment>\n  );\n};\n\nexport default CreateRequest;\n","import React from 'react';\nimport { List, Header, Icon, Segment, Divider } from 'semantic-ui-react';\nimport { User } from '@daml.js/dfa';\nimport { useParty, useQuery } from '@daml/react';\n\nconst MyApprovedRequests: React.FC = () => {\n\n    const party = useParty();\n    const results = useQuery(User.CompletedRequest);\n\n    const items = results.contracts\n        .filter(item =>\n            item.payload.user === party &&\n            (item.payload.disapprovers.length + item.payload.approvers.length === item.payload.parties.length)\n        )\n        .map(item => item.payload)\n        .reverse();\n        \n    return (\n        <Segment className=\"daml-section\">\n\n            <Header as='h2'>\n                <Icon name='globe' />\n                <Header.Content>My Approved Requests</Header.Content>\n            </Header>\n\n            <Divider />\n\n            <List relaxed className=\"items\">\n                {items && items.map((item, key) => (\n                    <Segment key={item.user + item.flight.timeStart + item.flight.timeEnd}>\n                        <List.Item><strong>{item.flight.timeStart} --> {item.flight.timeEnd}, lat: {item.flight.lat}, lng: {item.flight.lng}, altitude: {item.flight.altitude}</strong></List.Item>\n                    </Segment>\n                ))}\n            </List>\n\n        </Segment>\n    );\n}\n\nexport default MyApprovedRequests;","import React from 'react';\nimport { List, Header, Icon, Segment, Divider, Label } from 'semantic-ui-react';\nimport { User } from '@daml.js/dfa';\nimport { useParty, useQuery } from '@daml/react';\n\nconst MyRequests: React.FC = () => {\n\n    const party = useParty();\n    const results = useQuery(User.FlightRequest);\n    \n    const items = results.contracts\n        .filter(item =>\n            item.payload.user === party &&\n            (item.payload.disapprovers.length + item.payload.approvers.length < item.payload.parties.length)\n        )\n        .map(item => item.payload).reverse();\n\n  console.log(results);  \n    \n    return (\n        <Segment className=\"daml-section\">\n\n            <Header as='h2'>\n                <Icon name='globe' />\n                <Header.Content>\n                    My Requests\n                </Header.Content>\n            </Header>\n\n            <Divider />\n\n            <List relaxed className=\"items\">\n                {items && items.map((item, key) => (\n                    <Segment key={item.user + item.flight.timeStart + item.flight.timeEnd}>\n                        <Label color='blue' ribbon className=\"label\">\n                          Request\n                        </Label>\n                        <List>\n                            <List.Item>Info: <strong>lat: {item.flight.lat}, lng: {item.flight.lng}, altitude: {item.flight.altitude}</strong></List.Item>\n                            <List.Item>Time: <strong>{item.flight.timeStart} --> {item.flight.timeEnd}</strong></List.Item>\n                            <List.Item>Approvers: <strong>{item.approvers.join(', ') || '---'}</strong></List.Item>\n                            <List.Item>Disapprovers: <strong>{item.disapprovers.join(', ') || '---'}</strong></List.Item>\n                        </List>\n                    </Segment>\n                ))}\n            </List>\n\n        </Segment>\n    );\n}\n\nexport default MyRequests;","import React from 'react';\nimport { List, Button, Header, Icon, Segment, Divider, Label } from 'semantic-ui-react';\nimport { User } from '@daml.js/dfa';\nimport { useParty, useLedger, useQuery, useReload } from '@daml/react';\nimport { ContractId } from '@daml/types';\nimport { PinMap } from './Maps';\n\nconst RequestsForApproval: React.FC = () => {\n\n    const party = useParty();\n    const ledger = useLedger();\n    const results = useQuery(User.FlightRequest);\n    const reload = useReload();\n    const [showMap, setShowMap] = React.useState(false);\n\n    const items = results.contracts\n        .filter(item =>\n            (item.payload.parties.includes(party)) && //  || item.signatories.includes(party)\n            !(item.payload.approvers.includes(party) || item.payload.disapprovers.includes(party))\n        )\n        .map(item => ({ ...item.payload, contractId: item.contractId }));\n\n    async function approveRequest(contractId: ContractId<User.FlightRequest>) {\n        await ledger.exercise(User.FlightRequest.Approved, contractId, { approver: party });\n        reload();\n    };\n\n    async function disapproveRequest(contractId: ContractId<User.FlightRequest>) {\n        await ledger.exercise(User.FlightRequest.Disapproved, contractId, { disapprover: party });\n        reload();\n    };\n\n    return (\n        <Segment className=\"daml-section\">\n\n            <Header as='h2'>\n                <Icon name='globe' />\n                <Header.Content>\n                    Requests For Approval\n                </Header.Content>\n            </Header>\n\n            <Divider />\n\n            <List relaxed className=\"items\">\n                {items && items.map((item, key) => (\n                    <Segment key={item.user + item.flight.timeStart + item.flight.timeEnd}>\n                        <Label as='a' color='teal' ribbon='left'>\n                          Review\n                        </Label>\n                        {\n                        <div className=\"create-request-map\" style={{width:\"100%\", height: showMap ? \"200px\" : \"0px\"}}>\n                        {showMap && (<PinMap lat={parseFloat(item.flight.lat)} lng={parseFloat(item.flight.lng)} />)}\n                        </div>}\n                        <List.Item>Time: <strong>{item.flight.timeStart} --> {item.flight.timeEnd}</strong></List.Item>\n                        <List.Item>Location: <strong>lat: {item.flight.lat},  lng: {item.flight.lng},  altitude: {item.flight.altitude}</strong></List.Item>\n                        <List.Item>User: <strong>{item.user}</strong></List.Item>\n                     \n                        {item.parties.includes(party) &&\n                            <div className=\"actions\">\n                                <Button\n                                    positive\n                                    onClick={() => approveRequest(item.contractId)}\n                                >Approve</Button>\n                                <Button\n                                    secondary\n                                    onClick={() => disapproveRequest(item.contractId)}\n                                >Disapprove</Button>\n                                <Button basic color='blue' icon labelPosition='left'\n                                    onClick={() => {setShowMap(!showMap)}}\n                                >\n                                  <Icon name='map' />map\n                                </Button>\n                            </div>\n                        }\n                    </Segment>\n                ))}\n            </List>\n\n        </Segment>\n    );\n}\n\nexport default RequestsForApproval;","import React, { useEffect, useRef } from 'react';\nimport { Header, Icon, Segment, Divider } from 'semantic-ui-react';\nimport { User } from '@daml.js/dfa';\nimport { useParty, useQuery } from '@daml/react';\nimport {\n  Chart,\n  ArcElement,\n  LineElement,\n  BarElement,\n  PointElement,\n  BarController,\n  BubbleController,\n  DoughnutController,\n  LineController,\n  PieController,\n  PolarAreaController,\n  RadarController,\n  ScatterController,\n  CategoryScale,\n  LinearScale,\n  LogarithmicScale,\n  RadialLinearScale,\n  TimeScale,\n  TimeSeriesScale,\n  Decimation,\n  Filler,\n  Legend,\n  Title,\n  Tooltip,\n  SubTitle\n } from 'chart.js';\n\nChart.register(\n  ArcElement,\n  LineElement,\n  BarElement,\n  PointElement,\n  BarController,\n  BubbleController,\n  DoughnutController,\n  LineController,\n  PieController,\n  PolarAreaController,\n  RadarController,\n  ScatterController,\n  CategoryScale,\n  LinearScale,\n  LogarithmicScale,\n  RadialLinearScale,\n  TimeScale,\n  TimeSeriesScale,\n  Decimation,\n  Filler,\n  Legend,\n  Title,\n  Tooltip,\n  SubTitle\n);\n\nconst RequestsGraph: React.FC = () => {\n\n  const party = useParty();\n  const canvasRef = useRef();\n\n  const results = useQuery(User.FlightRequest);\n  // const resultsCompleted = useQuery(User.CompletedRequest);\n\n  const datasets = results.contracts.map(item => {\n    const color1 = Math.random() * 200 + 55;\n    const color2 = Math.random() * 200 + 55;\n    const color3 = Math.random() * 200 + 55;\n    return {\n      data: [{\n        x: item.payload.flight.timeStart,\n        y: item.payload.flight.altitude,\n        r: 13,\n        backgroundColor: `rgba(${color1}, ${color2}, ${color3}, 1)`,\n      }, {\n        x: item.payload.flight.timeEnd,\n        y: item.payload.flight.altitude,\n        r: 13,\n        backgroundColor: `rgba(${color1}, ${color2}, ${color3}, 1)`,\n      }],\n      label: item.payload.user,\n      borderColor: `rgba(${color1}, ${color2}, ${color3}, 1)`,\n      backgroundColor: `rgba(${color1}, ${color2}, ${color3}, 0.5)`,\n      tension: 0.1\n    }\n  });\n  \n  useEffect(() => {\n    let myChart;\n    if (canvasRef.current) {\n      myChart = new Chart(canvasRef.current, {\n        type: 'line',\n        data: { \n          datasets\n        },\n      });\n    }\n  \n    return () => {\n      myChart && myChart.destroy();\n    };\n  },[datasets]);\n  \n\n\n  \n  return (\n      <Segment className=\"daml-section\">\n\n          <Header as='h2'>\n              <Icon name='globe' />\n              <Header.Content>Requests Graph</Header.Content>\n          </Header>\n\n          <Divider />\n\n          { party && <canvas ref={canvasRef}></canvas> }\n\n      </Segment>\n  );\n}\n\nexport default RequestsGraph;","import React from 'react'\nimport { Form, Button, Header, Icon, Segment, Divider } from 'semantic-ui-react';\nimport { useParty, useLedger, useReload, useQuery } from '@daml/react';\nimport { User } from '@daml.js/dfa';\n\ntype Props = {\n  update: Function;\n}\n\nconst CreateMember: React.FC<Props> = ({update}) => {\n\n  const parties = [\"Admin\"];\n  \n  const party = useParty();\n  const ledger = useLedger();\n  const reload = useReload();\n  const allowRequest = party && parties.includes(party);\n\n  const results = useQuery(User.User);\n\n  const users = results.contracts\n        .map(item => ({\n          key: item.payload.username,\n          text: item.payload.username,\n          value: item.payload.username,\n        }));\n  \n  const [data, setData] = React.useState({});\n  const [isSubmitting, setIsSubmitting] = React.useState(false);\n  \n  const submit = async (event: React.FormEvent) => {\n    try { \n      event.preventDefault();\n      setIsSubmitting(true);\n      await ledger.create(User.GroupMember, { org: party, group: data.group, member: data.member });\n      reload();\n    } catch (error) {\n      alert(`Error sending message:\\n${JSON.stringify(error)}`);\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n  \n  return (\n    <Segment  className=\"daml-section\">\n\n      <Header as='h2'>\n          <Icon name='globe' />\n          <Header.Content>Create Members</Header.Content>\n      </Header>\n\n      <Divider />\n\n      {allowRequest && \n        <Form className=\"create-request-form\">\n          <Form.Dropdown\n            fluid\n            search\n            selection\n            className='select-request-receiver'\n            placeholder=\"Select group\"\n            options={[\n            { key: \"User\", text: \"User\", value: \"User\" },\n            { key: \"Zoolog\", text: \"Zoolog\", value: \"Zoolog\" },\n            { key: \"Meteorologist\", text: \"Meteorologist\", value: \"Meteorologist\" },\n            { key: \"Hamal\", text: \"Hamal\", value: \"Hamal\" },]}\n            onChange={e => setData({ ...data , group: e.currentTarget.textContent })}\n          />\n\n          <Form.Dropdown\n            fluid\n            search\n            selection\n            className='select-request-receiver'\n            placeholder=\"Select group\"\n            options={users}\n            onChange={e => setData({ ...data , member: e.currentTarget.textContent })}\n          />\n          \n          <Button\n            primary\n            className='select-request-send-button'\n            onClick={submit}\n            loading={isSubmitting}\n            content=\"Send\"\n          />\n        </Form>\n      }\n\n    </Segment>\n  );\n};\n\nexport default CreateMember;\n","\n// ========================= Bases ========================= //\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'semantic-ui-css/semantic.min.css';\nimport './index.css';\n\n// ======================= Providers ======================= //\n\nimport { GlobalStateProvider } from \"./contexts/GlobalState\";\nimport { BlocktreeProvider, AddComponent } from \"./contexts/BlocktreeProvider\";\nimport DamlProvider from \"./contexts/DamlProvider\";\n\n// ====================== Components ======================= //\n\nimport UserWidget from './components/UserWidget';\nimport AllRequests from './components/AllRequests';\nimport CreateRequest from './components/CreateRequest';\nimport MyApprovedRequests from './components/MyApprovedRequests';\nimport MyRequests from './components/MyRequests';\nimport RequestsForApproval from './components/RequestsForApproval';\nimport RequestsGraph from './components/RequestsGraph';\nimport Users from './components/Users';\n\nimport CreateMember from './components/CreateMember';\nimport Members from './components/Members';\n\nconst widgets = {\n  UserWidget,\n\n  CreateRequest,\n  AllRequests,\n\n  RequestsGraph,\n\n  MyRequests,\n  MyApprovedRequests,\n\n  RequestsForApproval,\n\n  Users,\n\n  CreateMember,\n  \n  Members,\n};\n\n// =================== Boocktree handler =================== //\n\nwindow.BlocktreeWidgets = function (name, el, settings) {\n  try {\n    if (widgets[name]) {\n      AddComponent(el, widgets[name], settings);\n    } else {\n      el.innerHTML = `Block <strong>${name}</strong> is empty client component`;\n    }\n  } catch (error) {\n    el.innerHTML = `Client component is broken. <br/> ${error}`;\n  }\n}\n\nclass ElementreeElement extends HTMLElement {\n  connectedCallback() {\n    const name = this.getAttribute(\"name\")\n    try {\n      if (widgets[name]) {\n        AddComponent(this, widgets[name], this.dataset);\n      } else {\n        this.innerHTML = `Block <strong>${name}</strong> is empty client component`;\n      }\n    } catch (error) {\n      this.innerHTML = `Client component is broken. <br/> ${error}`;\n    }\n  }\n}\ncustomElements.define('elementree-widget', ElementreeElement);\n\n// ========================= Setup ========================= //\n\n// setup as Blocktree\nReactDOM.render(\n  <GlobalStateProvider >\n    <DamlProvider>\n      <BlocktreeProvider />\n    </DamlProvider>\n  </GlobalStateProvider>,\n  document.createElement('div')\n);\n\n// ========================= Test ========================== //\n\nroot && (root.innerHTML = `\n  <elementree-widget name='UserWidget'></elementree-widget>\n\n  <elementree-widget name='CreateMember'></elementree-widget>\n  <elementree-widget name='Members'></elementree-widget>\n\n  <elementree-widget name='CreateRequest'></elementree-widget>\n  <elementree-widget name='MyRequests'></elementree-widget>\n\n  <elementree-widget name='MyApprovedRequests'></elementree-widget>\n  <elementree-widget name='RequestsForApproval'></elementree-widget>\n\n  <elementree-widget name='AllRequests'></elementree-widget>\n  <elementree-widget name='Users'></elementree-widget>\n\n  <elementree-widget name='RequestsGraph'></elementree-widget>\n`);\n","import React from 'react';\nimport { List, Header, Icon, Segment, Divider } from 'semantic-ui-react';\nimport { User } from '@daml.js/dfa';\nimport { useQuery } from '@daml/react';\n\nconst Users: React.FC = () => {\n\n    const results = useQuery(User.User);\n\n    const items = results.contracts\n        .map(item => item.payload);\n\n    return (\n        <Segment  className=\"daml-section\">\n\n            <Header as='h2'>\n                <Icon name='globe' />\n                <Header.Content>\n                    Users\n                </Header.Content>\n            </Header>\n\n            <Divider />\n\n            <List relaxed className=\"items\">\n                {items && items.map((item, key) => (\n                    <Segment key={item.username}>\n                        <List.Item>Name: <strong>{item.username}</strong></List.Item>\n                    </Segment>\n                ))}\n            </List>\n\n        </Segment>\n    );\n}\n\nexport default Users;","import React from 'react';\nimport { List, Header, Icon, Segment, Divider } from 'semantic-ui-react';\nimport { User } from '@daml.js/dfa';\nimport { useQuery } from '@daml/react';\n\nconst Members: React.FC = () => {\n\n    const results = useQuery(User.GroupMember);\n\n    const groups = {};\n    results.contracts.forEach(item => {\n        groups[item.payload.group] || (groups[item.payload.group] = []);\n        groups[item.payload.group].push(item.payload.member);\n    });\n    \n    \n    return (\n        <Segment  className=\"daml-section\">\n\n            <Header as='h2'>\n                <Icon name='globe' />\n                <Header.Content>\n                    Members\n                </Header.Content>\n            </Header>\n\n            <Divider />\n\n            <List relaxed className=\"items\">\n                {Object.keys(groups).map((group) => (\n                    <Segment key={group}>\n                        <List.Item>Group: <strong>{group}</strong></List.Item>\n                        <List.Item>Members: <strong>{groups[group].join(\", \")}</strong></List.Item>\n                    </Segment>\n                ))}\n            </List>\n\n        </Segment>\n    );\n}\n\nexport default Members;"],"sourceRoot":""}