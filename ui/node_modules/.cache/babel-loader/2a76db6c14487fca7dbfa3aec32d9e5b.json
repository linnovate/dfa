{"ast":null,"code":"var _jsxFileName = \"/Users/liorkesos/projects/daml/create-daml-app/ui/src/components/App.tsx\",\n    _s = $RefreshSig$();\n\n// Copyright (c) 2021 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\nimport LoginScreen from './LoginScreen';\nimport MainScreen from './MainScreen';\nimport DamlLedger from '@daml/react';\nimport { httpBaseUrl } from '../config';\n/**\n * React component for the entry point into the application.\n */\n// APP_BEGIN\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [credentials, setCredentials] = React.useState();\n  return credentials ? /*#__PURE__*/_jsxDEV(DamlLedger, {\n    token: credentials.token,\n    party: credentials.party,\n    httpBaseUrl: httpBaseUrl,\n    children: /*#__PURE__*/_jsxDEV(MainScreen, {\n      onLogout: () => setCredentials(undefined)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 7\n  }, this) : /*#__PURE__*/_jsxDEV(LoginScreen, {\n    onLogin: setCredentials\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 7\n  }, this);\n}; // APP_END\n\n\n_s(App, \"TBIpk6K8RH7abITeK35Tnn/fe+E=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/liorkesos/projects/daml/create-daml-app/ui/src/components/App.tsx"],"names":["React","LoginScreen","MainScreen","DamlLedger","httpBaseUrl","App","credentials","setCredentials","useState","token","party","undefined"],"mappings":";;;AAAA;AACA;AAEA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,UAAP,MAAuB,aAAvB;AAEA,SAASC,WAAT,QAA4B,WAA5B;AAEA;AACA;AACA;AACA;;;;AACA,MAAMC,GAAa,GAAG,MAAM;AAAA;;AAC1B,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCP,KAAK,CAACQ,QAAN,EAAtC;AAEA,SAAOF,WAAW,gBACd,QAAC,UAAD;AACE,IAAA,KAAK,EAAEA,WAAW,CAACG,KADrB;AAEE,IAAA,KAAK,EAAEH,WAAW,CAACI,KAFrB;AAGE,IAAA,WAAW,EAAEN,WAHf;AAAA,2BAKE,QAAC,UAAD;AAAY,MAAA,QAAQ,EAAE,MAAMG,cAAc,CAACI,SAAD;AAA1C;AAAA;AAAA;AAAA;AAAA;AALF;AAAA;AAAA;AAAA;AAAA,UADc,gBAQd,QAAC,WAAD;AAAa,IAAA,OAAO,EAAEJ;AAAtB;AAAA;AAAA;AAAA;AAAA,UARJ;AASD,CAZD,C,CAaA;;;GAbMF,G;;KAAAA,G;AAeN,eAAeA,GAAf","sourcesContent":["// Copyright (c) 2021 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport React from 'react';\nimport LoginScreen from './LoginScreen';\nimport MainScreen from './MainScreen';\nimport DamlLedger from '@daml/react';\nimport Credentials from '../Credentials';\nimport { httpBaseUrl } from '../config';\n\n/**\n * React component for the entry point into the application.\n */\n// APP_BEGIN\nconst App: React.FC = () => {\n  const [credentials, setCredentials] = React.useState<Credentials | undefined>();\n\n  return credentials\n    ? <DamlLedger\n        token={credentials.token}\n        party={credentials.party}\n        httpBaseUrl={httpBaseUrl}\n      >\n        <MainScreen onLogout={() => setCredentials(undefined)}/>\n      </DamlLedger>\n    : <LoginScreen onLogin={setCredentials} />\n}\n// APP_END\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}