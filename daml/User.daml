-- Copyright (c) 2021 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.
-- SPDX-License-Identifier: Apache-2.0

module User where
import Daml.Script

type Key = (Party, Text)
type Place = (Int, Int)

makeAdmin =
  script do
    admin <- allocateParty "Admin"
    submit admin do
      createCmd Admin with adminame = admin

template Admin with
    adminame: Party
  where
    signatory adminame

    key adminame: Party
    maintainer key


-- MAIN_TEMPLATE_BEGIN
template User with
    username: Party
    requests: [Request]
  where
    signatory username
-- MAIN_TEMPLATE_END

    key username: Party
    maintainer key

    -- REQUEST_BEGIN
    preconsuming choice SendRequest: ContractId User with
          receiver: Party
          content: Text
          geo: Place
        controller username
        do

          -- #TODO: make sure a new request won't be made if it exists with the exact same text

          create Request with sender = username, receiver = receiver, content, status = "Sent", geo = geo
          (_, requestId) <- fetchByKey @Request (username, content) -- We divide it into two lines for the ID
          create this with requests = requestId :: requests
    -- REQUEST_END

template Request with
    sender: Party
    receiver: Party
    content: Text
    status: Text
    geo: Place
  where
    signatory sender

    key (sender, content) : Key
    maintainer key._1

    observer receiver
